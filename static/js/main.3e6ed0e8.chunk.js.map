{"version":3,"sources":["hooks/useLocalStorageReducer.js","reducers/todos.reducer.js","contexts/todos.context.js","hooks/useInputState.js","styles/TodoFormStyles.js","components/TodoForm.js","styles/EditTodoFormStyles.js","components/EditTodoForm.js","hooks/useToggleState.js","styles/TodoStyles.js","components/Todo.js","components/TodoList.js","components/TodoApp.js","helpers/sizes.js","styles/AppStyles.js","components/App.js","serviceWorker.js","index.js"],"names":["useLocalStorageReducer","key","reducer","defaultValue","useReducer","value","JSON","parse","window","localStorage","getItem","String","e","state","dispatch","useEffect","setItem","stringify","action","type","id","uuid","task","completed","filter","todo","map","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","todosReducer","todos","Provider","children","initialValue","useState","setValue","target","makeStyles","TodoForm","width","marginBottom","input","height","background","border","borderBottom","color","fontSize","fontWeight","outline","classes","useStyles","useContext","useInputState","handleChange","reset","onSubmit","preventDefault","className","placeholder","onChange","EditTodoForm","transition","transform","toggleEditForm","autoFocus","onClick","stopPropagation","setState","toggle","Todo","display","alignItems","justifyContent","paddingLeft","lineHeight","overflowX","cursor","opacity","icons","marginRight","float","memo","useToggleState","isEditing","style","overflowY","textDecoration","TodoList","TodoApp","size","xs","md","App","margin","sizes","header","textAlign","link","backfaceVisibility","position","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e6ed0e8.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\n\nfunction useLocalStorageReducer(key, reducer, defaultValue) {\n  const [state, dispatch] = useReducer(reducer, defaultValue, () => {\n    let value;\n    try {\n      value = JSON.parse(\n        window.localStorage.getItem(key) || String(defaultValue)\n      );\n    } catch (e) {\n      value = defaultValue;\n    }\n    return value;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, dispatch];\n}\n\nexport default useLocalStorageReducer;\n","import uuid from 'uuid/v4';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, { id: uuid(), task: action.task, completed: false }];\n    case 'REMOVE_TODO':\n      return state.filter(todo => todo.id !== action.id);\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    case 'EDIT_TODO':\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, task: action.task } : todo\n      );\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { createContext } from 'react';\nimport useLocalStorageReducer from '../hooks/useLocalStorageReducer';\nimport todosReducer from '../reducers/todos.reducer';\n\nconst defaultTodos = [\n  { id: '0', task: 'Read a book', completed: false },\n  { id: '1', task: 'Jog in a playground', completed: true },\n  { id: '2', task: 'Write articles', completed: false }\n];\n\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TodosProvider(props) {\n  const [todos, dispatch] = useLocalStorageReducer(\n    'todos',\n    todosReducer,\n    defaultTodos\n  );\n\n  return (\n    <TodosContext.Provider value={todos}>\n      <DispatchContext.Provider value={dispatch}>\n        {props.children}\n      </DispatchContext.Provider>\n    </TodosContext.Provider>\n  );\n}\n","import { useState } from 'react';\n\nexport default initialValue => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = e => setValue(e.target.value);\n  const reset = () => setValue('');\n\n  return [value, handleChange, reset];\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  TodoForm: {\n    width: '100%',\n    marginBottom: '1rem'\n  },\n  input: {\n    width: '100%',\n    height: '2rem',\n    background: 'none',\n    border: 'none',\n    borderBottom: '1px solid #34495e',\n    color: '#34495e',\n    fontSize: '1.2rem',\n    fontWeight: '300',\n    outline: 'none'\n  }\n});\n","import React, { useContext } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\nimport useInputState from '../hooks/useInputState';\nimport useStyles from '../styles/TodoFormStyles';\n\nfunction TodoForm() {\n  const classes = useStyles();\n  const dispatch = useContext(DispatchContext);\n  const [value, handleChange, reset] = useInputState('');\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        dispatch({ type: 'ADD_TODO', task: value });\n        reset();\n      }}\n      className={classes.TodoForm}\n    >\n      <input\n        placeholder=\"Add your task here...\"\n        value={value}\n        onChange={handleChange}\n        className={classes.input}\n      ></input>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  EditTodoForm: {\n    width: '100%',\n    marginBottom: '1rem'\n  },\n  input: {\n    width: '85%',\n    background: 'transparent',\n    border: 'none',\n    borderBottom: '1px solid #ccc',\n    fontSize: '1rem',\n    transition: '0.6s',\n    transform: 'translateY(8px)',\n    '&:focus': {\n      borderBottom: '1px solid #58b2dc',\n      outline: 'none'\n    }\n  }\n});\n","import React, { useContext } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\nimport useInputState from '../hooks/useInputState';\nimport useStyles from '../styles/EditTodoFormStyles.js';\n\nfunction EditTodoForm({ id, task, toggleEditForm }) {\n  const classes = useStyles();\n  const dispatch = useContext(DispatchContext);\n  const [value, handleChange, reset] = useInputState(task);\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        dispatch({ type: 'EDIT_TODO', id, task: value });\n        reset();\n        toggleEditForm();\n      }}\n      className={classes.EditTodoForm}\n    >\n      <input\n        autoFocus\n        value={value}\n        onChange={handleChange}\n        onClick={e => e.stopPropagation()}\n        className={classes.input}\n      />\n    </form>\n  );\n}\n\nexport default EditTodoForm;\n","import { useState } from 'react';\n\nexport default (initialValue = false) => {\n  const [state, setState] = useState(initialValue);\n  const toggle = () => setState(!state);\n\n  return [state, toggle];\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  Todo: {\n    width: '100%',\n    height: '2.5rem',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: '0.5rem',\n    color: '#34495e',\n    fontSize: '1rem',\n    lineHeight: '2.5rem',\n    overflowX: 'hidden',\n    transition: 'all 0.3s ease',\n    '&:hover': {\n      background: 'rgba(0, 0, 0, 0.03)',\n      cursor: 'pointer'\n    },\n    '&:hover div': {\n      opacity: '1'\n    }\n  },\n  icons: {\n    width: '40px',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginRight: '1rem',\n    float: 'right',\n    transition: 'all 0.3s',\n    opacity: '0'\n  }\n});\n","import React, { useContext, memo } from 'react';\nimport { DispatchContext } from '../contexts/todos.context';\nimport EditTodoForm from './EditTodoForm';\nimport useToggleState from '../hooks/useToggleState';\nimport useStyles from '../styles/TodoStyles.js';\n\nfunction Todo({ id, task, completed }) {\n  const classes = useStyles();\n  const dispatch = useContext(DispatchContext);\n  const [isEditing, toggle] = useToggleState(false);\n\n  if (isEditing) {\n    return (\n      <li\n        className={classes.Todo}\n        style={{ overflowY: 'hidden' }}\n        onClick={() => toggle()}\n      >\n        <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\n      </li>\n    );\n  }\n\n  return (\n    <li\n      className={classes.Todo}\n      onClick={() => dispatch({ type: 'TOGGLE_TODO', id })}\n    >\n      <span\n        style={{\n          textDecoration: completed ? 'line-through' : '',\n          color: completed ? '#bdc3c7' : '#34495e'\n        }}\n      >\n        {task}\n      </span>\n      <div className={classes.icons}>\n        <i\n          style={{ color: '#c0392b' }}\n          className=\"fas fa-trash\"\n          onClick={e => {\n            e.stopPropagation();\n            dispatch({ type: 'REMOVE_TODO', id });\n          }}\n        />\n        <i\n          style={{ color: '#58b2dc' }}\n          className=\"fas fa-pen\"\n          onClick={e => {\n            e.stopPropagation();\n            toggle();\n          }}\n        />\n      </div>\n    </li>\n  );\n}\n\nexport default memo(Todo);\n","import React, { useContext } from 'react';\nimport { TodosContext } from '../contexts/todos.context';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const todos = useContext(TodosContext);\n\n  return (\n    <ul style={{ paddingLeft: 10, width: '95%' }}>\n      {todos.map(todo => (\n        <Todo key={todo.id} {...todo} />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport { TodosProvider } from '../contexts/todos.context';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\n\nfunction TodoApp() {\n  return (\n    <TodosProvider>\n      <TodoForm />\n      <TodoList />\n    </TodosProvider>\n  );\n}\n\nexport default TodoApp;\n","export default {\n  down(size) {\n    const sizes = {\n      xs: '575.98px',\n      md: '991.98px'\n    };\n\n    return `@media (max-width: ${sizes[size]})`;\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\nimport sizes from '../helpers/sizes';\n\nexport default makeStyles({\n  App: {\n    width: '50%',\n    margin: '0 auto',\n    [sizes.down('md')]: {\n      width: '70%'\n    },\n    [sizes.down('xs')]: {\n      width: '90%'\n    }\n  },\n  header: {\n    textAlign: 'center',\n    '& h1': {\n      color: '#2c3e50',\n      margin: '5vh 0 0 0',\n      fontSize: '5rem',\n      fontWeight: '300',\n      '& span': {\n        fontWeight: '700'\n      },\n      [sizes.down('xs')]: {\n        fontSize: '4.5rem'\n      }\n    },\n    '& h2': {\n      color: '#9aa1a5',\n      fontSize: '1rem',\n      fontWeight: '300',\n      [sizes.down('xs')]: {\n        fontSize: '0.6rem'\n      }\n    }\n  },\n  link: {\n    display: 'flex',\n    justifyContent: 'center',\n    backfaceVisibility: 'hidden',\n    color: '#81b3d2',\n    fontSize: '0.7rem',\n    position: 'relative',\n    textDecoration: 'none',\n    transition: '0.5s color ease'\n  }\n});\n","import React from 'react';\nimport TodoApp from './TodoApp';\nimport useStyles from '../styles/AppStyles';\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.App}>\n      <header className={classes.header}>\n        <h1>\n          todo<span>list</span>\n        </h1>\n        <h2>A simple todolist app built with React, Hooks, & Context</h2>\n      </header>\n      <TodoApp />\n      <a\n        href=\"https://github.com/walkccc/react-hooks-todolist\"\n        className={classes.link}\n      >\n        <strong>View source on GitHub &copy; Jay Chen</strong>\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}